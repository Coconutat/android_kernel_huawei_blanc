&amba {
	#address-cells = <2>;
	#size-cells = <2>;
	interrupt-parent = <&gic>;
	ranges;

	/*rtc@FFF04000 {
			reg = <0xfff04000 0x1000>;
			interrupts = <0 46 0x4>;
			clocks = <&pclk>;
			clock-names = "apb_pclk";
			status = "ok";
	};*/

	/*rtc@FFF05000 {
			reg = <0xfff05000 0x1000>;
			interrupts = <0 47 0x4>;
			clocks = <&pclk>;
			clock-names = "apb_pclk";
			status = "ok";
	};*/

	watchdog0 {
		compatible = "arm,sp805", "arm,primecell";
		reg = <0x0 0xe8a06000 0x0 0x1000>;
		default-timeout = <24>;
		interrupts = <0 44 4>;
		clocks = <&pclk_gate_wd0 &pclk>;
		clock-names = "pclk_wd0", "apb_pclk";
		status = "ok";
	};

	watchdog@ffd7c000 {
		reg = <0x0 0xFFD7C000 0x0 0x1000>;
		status = "ok";
	};

	/*wdt1@e8a07000 {
		reg = <0x0 0xe8a07000 0x0 0x1000>;
		interrupts = <0 45 4>;
		clocks = <&pclk_gate_wd0 &pclk>;
		clock-names = "pclk_wd0", "apb_pclk";
	};*/

	uart@fdf02000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio035_pmx_func &gpio036_pmx_func &gpio035_cfg_func &gpio036_cfg_func>;
		pinctrl-1 = <&gpio035_pmx_idle &gpio036_pmx_idle &gpio035_cfg_idle &gpio036_cfg_idle>;
		dma-names = "", "";
		dmas = <>;
		clock-rate = <0 19200000>;
		status = "ok";
	};

	uart@fdf00000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <>;
		pinctrl-1 = <>;
		clock-rate = <0 111000000>;
		status = "disabled";
		reset-enable-flag = <1>;
	};

	uart@fdf03000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <>;
		pinctrl-1 = <>;
		clock-rate = <0 111000000>;
		status = "ok";
		reset-enable-flag = <1>;
	};

	uart@ffd74000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <>;
		pinctrl-1 = <>;
		clock-rate = <0 100000000>;
		status = "disabled";
		reset-enable-flag = <0>;
	};

	uart@fdf01000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio043_pmx_func &gpio044_pmx_func &gpio045_pmx_func &gpio046_pmx_func &gpio043_cfg_func &gpio044_cfg_func &gpio045_cfg_func &gpio046_cfg_func>;
		pinctrl-1 = <&gpio043_pmx_idle &gpio044_pmx_idle &gpio045_pmx_idle &gpio046_pmx_idle &gpio043_cfg_idle &gpio044_cfg_idle &gpio045_cfg_idle &gpio046_cfg_idle>;
		clock-rate = <0 111000000>;
		status = "ok";
		reset-enable-flag = <1>;
	};

	uart@fdf05000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio039_pmx_func &gpio040_pmx_func &gpio041_pmx_func &gpio042_pmx_func &gpio039_cfg_func &gpio040_cfg_func &gpio041_cfg_func &gpio042_cfg_func>;
		pinctrl-1 = <&gpio039_pmx_idle &gpio040_pmx_idle &gpio041_pmx_idle &gpio042_pmx_idle &gpio039_cfg_idle &gpio040_cfg_idle &gpio041_cfg_idle &gpio042_cfg_idle>;
		clock-rate = <0 111000000>;
		status = "ok";
		reset-enable-flag = <1>;
	};

	uart@fff32000 {
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio037_pmx_func &gpio038_pmx_func &gpio037_cfg_func &gpio038_cfg_func>;
		pinctrl-1 = <&gpio037_pmx_idle &gpio038_pmx_idle &gpio037_cfg_idle &gpio038_cfg_idle>;
		clock-rate = <0 19200000>;
		console-fifo-enable = <1>;
		console-fifo-size = <262144>;/* 256k */
		console-fifo-cpuon = <3>;
	};

	dx_cc63p@fdf0e000 {
		reg = <0x0 0xfdf0e000 0x0 0x1000>;
		interrupt-parent = <&gic>;
		interrupts = <0 135 4>;
		status = "ok";
	};

	spi@ffd70000 {
		status = "disabled";
		hardware-mutex = <0x01>;
		clock-rate = <0 134400000>;

		spi_dev0@0 {
			spi-max-frequency = <100000>;
			reg = <0>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev1@1 {
			spi-max-frequency = <13000000>;
			reg = <1>;
			pl022,com-mode = <1>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev2@2 {
			spi-max-frequency = <13000000>;
			reg = <2>;
			pl022,com-mode = <2>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev3@3 {
			spi-max-frequency = <13000000>;
			reg = <3>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};
	};

	spi@fdf08000 {
		status = "disabled";
		clock-rate = <19200000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio008_pmx_func &gpio009_pmx_func &gpio010_pmx_func &gpio008_cfg_func &gpio009_cfg_func
				&gpio010_cfg_func>;
		pinctrl-1 = <&gpio008_pmx_idle &gpio009_pmx_idle &gpio010_pmx_idle &gpio008_cfg_idle &gpio009_cfg_idle
				&gpio010_cfg_idle>;

		spi_dev10@10 {
			spi-max-frequency = <100000>;
			reg = <0>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};
	};

	spi@fff2a000 {
		status = "ok";

		clock-rate = <120000000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio144_pmx_func &gpio145_pmx_func &gpio146_pmx_func &gpio144_cfg_func &gpio145_cfg_func
				&gpio146_cfg_func>;
		pinctrl-1 = <&gpio144_pmx_idle &gpio145_pmx_idle &gpio146_pmx_idle &gpio144_cfg_idle &gpio145_cfg_idle
				&gpio146_cfg_idle>;

		huawei_thp@10 {
			spi-max-frequency = <10000000>;
			spi-bus-id = <3>;
			reg = <0>;
			pl022,com-mode = <2>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
			irq_gpio = <&gpio26 4 0>;
			cs_gpio = <&gpio18 3 0>;
			rst_gpio = <&gpio1 7 0>;
			boot_reset_hi_delay_ms = <1>;
			boot_reset_low_delay_ms = <0>;
			boot_reset_after_delay_ms = <0>;
			resume_reset_after_delay_ms = <1>;
			suspend_reset_after_delay_ms = <0>;
			spi_sync_cs_hi_delay_ns = <200>;
			spi_sync_cs_low_delay_ns = <10>;

			thp_input_dev {
				abs_max_x = <1080>;
				abs_max_y = <1920>;
			};

			novatech {
				spi_sync_cs_hi_delay_ns = <200>;
				spi_sync_cs_low_delay_ns = <200>;
			};

			rohm-bu21150 {
				spi_sync_cs_hi_delay_ns = <200>;
				spi_sync_cs_low_delay_ns = <10>;
			};
		};

		spi_dev30@30 {
			spi-max-frequency = <100000>;
			reg = <0>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev31@31 {
			spi-max-frequency = <13000000>;
			reg = <1>;
			pl022,com-mode = <1>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev32@32 {
			spi-max-frequency = <13000000>;
			reg = <2>;
			pl022,com-mode = <2>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev33@33 {
			spi-max-frequency = <13000000>;
			reg = <3>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};
	};

	spi@fdf06000 {
		status = "disabled";
		clock-rate = <19200000>;
		spi_dev40@40 {
			spi-max-frequency = <100000>;
			reg = <0>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev41@41 {
			spi-max-frequency = <13000000>;
			reg = <1>;
			pl022,com-mode = <1>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev42@42 {
			spi-max-frequency = <13000000>;
			reg = <2>;
			pl022,com-mode = <2>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};

		spi_dev43@43 {
			spi-max-frequency = <13000000>;
			reg = <3>;
			pl022,com-mode = <0>;
			pl022,interface = <0>;
			pl022,rx-level-trig = <3>;
			pl022,tx-level-trig = <3>;
			pl022,ctrl-len = <7>;
			pl022,wait-state = <0>;
			pl022,duplex = <0>;
			pl022,slave-tx-disable = <0>;
		};
	};

	/* I2C0 ~ I2C4 */
	i2c@FFD71000 {
		status = "disabled";
		pinctrl-names = "default", "idle";
		pinctrl-0 = <>;
		pinctrl-1 = <>;
		//cs-gpios = <>, <>;
	};

	i2c@FFD72000 {
		status = "ok";
		clock-rate = <0 33600000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio188_pmx_func &gpio189_pmx_func &gpio188_cfg_func &gpio189_cfg_func>;
		pinctrl-1 = <&gpio188_pmx_idle &gpio189_pmx_idle &gpio188_cfg_idle &gpio189_cfg_idle>;
		cs-gpios = <&gpio23 4 0>, <&gpio23 5 0>;
		superswitch_fusb3601_i2c1@25 {
			fairchild,int_n = <&gpio28 3 0>;
			dpd_enable = <0>;
			compatible = "fairchild,fusb3601";
			i2c_clk_reset_gpio = <188>;
			i2c_dat_reset_gpio = <189>;
			status = "ok";
		};

		fusb30x_i2c1@22 {
			status = "disabled";
			fairchild,int_n = <&gpio27 5 0>;
		};

		rt1711_i2c1@4e {
			status = "disabled";
			rt1711,irq_pin = <&gpio27 5 0>;
		};

		tusb422_i2c1@20 {
			status = "disabled";
			ti,alert-gpio = <&gpio27 5 0>;
		};

		rt9748@67 {
			loadswitch_int = <&gpio27 3 0>;
			loadswitch_en = <&gpio24 2 0>;
			reg = <0x67>;
			status = "ok";
		};
	};

	i2c@FFD73000 {
		status = "disabled";
		clock-rate = <0 33600000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio190_pmx_func &gpio191_pmx_func &gpio190_cfg_func &gpio191_cfg_func>;
		pinctrl-1 = <&gpio190_pmx_idle &gpio191_pmx_idle &gpio190_cfg_idle &gpio191_cfg_idle>;
		cs-gpios = <&gpio23 6 0>, <&gpio23 7 0>;
	};

	i2c@FDF0C000 {
		status = "ok";
		clock-rate = <0 111000000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio006_pmx_func &gpio007_pmx_func &gpio006_cfg_func &gpio007_cfg_func>;
		pinctrl-1 = <&gpio006_pmx_idle &gpio007_pmx_idle &gpio006_cfg_idle &gpio007_cfg_idle>;
		cs-gpios = <&gpio0 6 0>, <&gpio0 7 0>;

		ti,lm36923 {
			reg = <0x36>;
			lm36923-ctrl-mode = <0>;
			lcd-bl-ic-name = "LM36923YFFR";
			lm36923-led-num = <2>;
			fake_panel_enable_reg = <3>;
			lm36923_hw_en_gpio = <11>;
			lm36923-boost-ctrl-1 = <0x7D>;
			lm36923-fault-ctrl = <0x00>;
			status = "ok";
		};

		max77813@18 {
			gpio_pok = <&gpio26 3 0>;
			reg = <0x18>;
			status = "disabled";
		};

		huawei,vl53l0@29 {
			huawei,laser_name = "vl53l0_970";
			reg = <0x29>;
			product_name = "ALPS_LASER";
			avdd-supply = <&ldo34>;
			huawei,ldo-names = "avdd";
			gpios = <&gpio4 3 0 &gpio16 0 0>;
			huawei,gpio-ctrl-types = "xsdn", "intr";
			pinctrl-names = "default", "idle";
			pinctrl-0 = <&gpio035_pmx_func &gpio035_cfg_func>;
			pinctrl-1 = <&gpio035_pmx_idle &gpio035_cfg_idle>;
			status = "ok";
		};
	};

	i2c@FDF0D000 {
		status = "ok";
		clock-rate = <0 111000000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio026_pmx_func &gpio027_pmx_func &gpio026_cfg_func &gpio027_cfg_func>;
		pinctrl-1 = <&gpio026_pmx_idle &gpio027_pmx_idle &gpio026_cfg_idle &gpio027_cfg_idle>;
		cs-gpios = <&gpio3 2 0>, <&gpio3 3 0>;

		ti-drv2605@5a {
			status = "ok";
			ti,max-timeout-ms = <10000>;
			ti,label = "vibrator";
			reg = <0x5a>;
			gpio-enable = <&gpio1 6 0>;
			lra_rated_voltage = <0x36>;
			lra_overdriver_voltage = <0x76>;
			lra_rtp_strength = <0x7F>;
			check_power_state1 = <&gpio17 1 0>;
			check_power_state2 = <&gpio20 1 0>;
			check_power_time = <3>;
		};

		tfa9874_smartpa_l:smartpa@34{
			compatible = "huawei,smartpakit_i2c";
			reg = <0x34>;
			/* 0 MAXIM, 1 NXP, 2 TI, 3 OTHER, 4:huawei customize */
			chip_vendor = <4>;
			/* refer to smartpakit.out_device prop */
			chip_id = <0>;
			chip_model = "tfa9874";
			status = "ok";

			/* reg_ctl node: a node contains three data<addr value ctl_type>
			* ctl_type: 0 read reg(default), 1 write reg, 2 only time delay
			* value:
			*     read:  reg number(num >= 1)
			*     write: reg value
			*     delay: time delay
			* time delay unit: msecs */
			version_regs = <0x03 1 0>;
			dump_regs = <0 256 0>;

			hw_reset {
				gpio_reset = <134>;
				/* gpio_state node: a node contains two data<state delay>
				* time delay unit: msecs */
				ctl_sequence = <1 1 0 1>;
			};
			irq_handler {
				gpio_irq = <200>;
				/* 0x0 IRQF_TRIGGER_NONE, 0x1 IRQF_TRIGGER_RISING, 0x2 IRQF_TRIGGER_FALLING, 0x4 IRQF_TRIGGER_HIGH, 0x8 IRQF_TRIGGER_LOW*/
				irq_flags = <2>;
				/* whether or not need reset chip*/
				need_reset;
				rw_sequence = <
					0x10 1 0
					0x11 1 0
					0x13 1 0
					0x14 1 0
					0x40 1 0
					0x41 1 0
					0x42 1 0
				>;
			};

			regmap_cfg {
				reg_bits = <8>;
				val_bits = <16>;
				/* 0 REGCACHE_NONE, 1 REGCACHE_RBTREE, 2 REGCACHE_COMPRESSED, 3 REGCACHE_FLAT */
				cache_type = <0>;
				max_register = <0xff>;
				reg_defaults = <
					0x00 0x1801
					0x01 0x0014
				>;
			};
		};

		tfa9874_smartpa_r:smartpa@36{
			compatible = "huawei,smartpakit_i2c";
			reg = <0x36>;
			/* 0 MAXIM, 1 NXP, 2 TI, 3 OTHER, 4:huawei customize */
			chip_vendor = <4>;
			/* refer to smartpakit.out_device prop */
			chip_id = <1>;
			chip_model = "tfa9874";
			status = "ok";

			/* reg_ctl node: a node contains three data<addr value ctl_type>
			* ctl_type: 0 read reg(default), 1 write reg, 2 only time delay
			* value:
			*     read:  reg number(num >= 1)
			*     write: reg value
			*     delay: time delay
			* time delay unit: msecs */
			version_regs = <0x03 1 0>;
			dump_regs = <0 256 0>;

			hw_reset {
				gpio_reset = <146>;
				/* gpio_state node: a node contains two data<state delay>
				* time delay unit: msecs */
				ctl_sequence = <1 1 0 1>;
			};

			irq_handler {
				gpio_irq = <184>;
				/* 0x0 IRQF_TRIGGER_NONE, 0x1 IRQF_TRIGGER_RISING, 0x2 IRQF_TRIGGER_FALLING, 0x4 IRQF_TRIGGER_HIGH, 0x8 IRQF_TRIGGER_LOW*/
				irq_flags = <2>;
				/* whether or not need reset chip*/
				need_reset;
				rw_sequence = <
					0x10 1 0
					0x11 1 0
					0x13 1 0
					0x14 1 0
					0x40 1 0
					0x41 1 0
					0x42 1 0
				>;
			};

			regmap_cfg {
				reg_bits = <8>;
				val_bits = <16>;
				/* 0 REGCACHE_NONE, 1 REGCACHE_RBTREE, 2 REGCACHE_COMPRESSED, 3 REGCACHE_FLAT */
				cache_type = <0>;
				max_register = <0xff>;
				reg_defaults = <
					0x00 0x1801
					0x01 0x0014
				>;
			};
		};

		cs35l36_smartpa_l:smartpa@50{
			compatible = "huawei,smartpakit_i2c";
			reg = <0x50>;
			/* 0 MAXIM, 1 NXP, 2 TI, 3 OTHER, 4:huawei customize */
			chip_vendor = <4>;
			/* refer to smartpakit.out_device prop */
			chip_id = <0>;
			chip_model = "cs35l36";
			status = "ok";

			/* reg_ctl node: a node contains three data<addr value ctl_type>
			* ctl_type: 0 read reg(default), 1 write reg, 2 only time delay
			* value:
			*     read:  reg number(num >= 1)
			*     write: reg value
			*     delay: time delay
			* time delay unit: msecs */
			version_regs = <0x0 1 0>;
			dump_regs = <
				0x000000 1          0
				0x000008 1          0
				0x002014 0x21       0
				0x002400 1          0
				0x002c04 0xd        0
				0x003800 0x31       0
				0x004004 1          0
				0x004220 1          0
				0x004300 1          0
				0x004800 0x3d       0
				0x004C00 1          0
				0x004C20 0x15       0
				0x006000 1          0
				0x006404 0x11       0
				0x006450 1          0
				0x006800 0x9        0
				0x006C04 1          0
				0xd00000 0x4d       0
				0xe02800 1          0>;

			hw_reset {
				gpio_reset = <134>;
				/* gpio_state node: a node contains two data<state delay>
				* time delay unit: msecs */
				ctl_sequence = <1 1 0 1>;
			};

			irq_handler {
				gpio_irq = <200>;
				/* 0x0 IRQF_TRIGGER_NONE, 0x1 IRQF_TRIGGER_RISING, 0x2 IRQF_TRIGGER_FALLING, 0x4 IRQF_TRIGGER_HIGH, 0x8 IRQF_TRIGGER_LOW*/
				irq_flags = <2>;
				/* whether or not need reset chip*/
				need_reset;
				rw_sequence = <
					0xd00020 1          0
					0xd00024 1          0
					0xd00028 1          0
					0xd0002c 1          0
					0xd00000 0xffffffff 1
					0xd00004 0xffffffff 1
					0xd00008 0xffffffff 1
					0xd0000c 0xffffffff 1
				>;
			};

			regmap_cfg {
				reg_bits = <32>;
				val_bits = <32>;
				/* 0 REGCACHE_NONE, 1 REGCACHE_RBTREE, 2 REGCACHE_COMPRESSED, 3 REGCACHE_FLAT */
				cache_type = <0>;
				max_register = <0xe0ffff>;
			};
		};

		cs35l36_smartpa_r:smartpa@52{
			compatible = "huawei,smartpakit_i2c";
			reg = <0x52>;
			/* 0 MAXIM, 1 NXP, 2 TI, 3 OTHER, 4:huawei customize */
			chip_vendor = <4>;
			/* refer to smartpakit.out_device prop */
			chip_id = <1>;
			chip_model = "cs35l36";
			status = "ok";

			/* reg_ctl node: a node contains three data<addr value ctl_type>
			* ctl_type: 0 read reg(default), 1 write reg, 2 only time delay
			* value:
			*     read:  reg number(num >= 1)
			*     write: reg value
			*     delay: time delay
			* time delay unit: msecs */
			version_regs = <0x0 1 0>;
			dump_regs = <
				0x000000 1          0
				0x000008 1          0
				0x002014 0x21       0
				0x002400 1          0
				0x002c04 0xd        0
				0x003800 0x31       0
				0x004004 1          0
				0x004220 1          0
				0x004300 1          0
				0x004800 0x3d       0
				0x004C00 1          0
				0x004C20 0x15       0
				0x006000 1          0
				0x006404 0x11       0
				0x006450 1          0
				0x006800 0x9        0
				0x006C04 1          0
				0xd00000 0x4d       0
				0xe02800 1          0>;

			hw_reset {
				gpio_reset = <146>;
				/* gpio_state node: a node contains two data<state delay>
				* time delay unit: msecs */
				ctl_sequence = <1 1 0 1>;
			};

			irq_handler {
				gpio_irq = <184>;
				/* 0x0 IRQF_TRIGGER_NONE, 0x1 IRQF_TRIGGER_RISING, 0x2 IRQF_TRIGGER_FALLING, 0x4 IRQF_TRIGGER_HIGH, 0x8 IRQF_TRIGGER_LOW*/
				irq_flags = <2>;
				/* whether or not need reset chip*/
				need_reset;
				rw_sequence = <
					0xd00020 1          0
					0xd00024 1          0
					0xd00028 1          0
					0xd0002c 1          0
					0xd00000 0xffffffff 1
					0xd00004 0xffffffff 1
					0xd00008 0xffffffff 1
					0xd0000c 0xffffffff 1
				>;
			};

			regmap_cfg {
				reg_bits = <32>;
				val_bits = <32>;
				/* 0 REGCACHE_NONE, 1 REGCACHE_RBTREE, 2 REGCACHE_COMPRESSED, 3 REGCACHE_FLAT */
				cache_type = <0>;
				max_register = <0xe0ffff>;
			};
		};

		nfc@28 {
			status = "ok";
			nfc_on_type = "gpio";
			nfc_brcm_conf_name = "libnfc-brcm.conf";
			nfc_nxp_name = "libnfc-nxp.conf";
			nfc_card_num = <0x2>;
			clk_status ="pmu_hi6421v600";
			pn547,dload = <&gpio3 6 0>;
			pn547,irq = <&gpio25 1 0>;
			pn547,ven = <&gpio16 2 0>;
			pinctrl-1 = <&gpio201_pmx_idle &gpio130_pmx_idle>;
			pinctrl-0 = <&gpio201_pmx_func &gpio130_pmx_func>;
			pinctrl-names = "default","idle";
			clock-names = "clk_out0";
			clocks = <&clk_gate_out0>;
			reg = <0x28>;
			nfc_chip_type = "pn551";
			nfc_single_channel = "true";
			nfc_ese_type = "hisee";
			nfc_svdd_sw = "hi6421v600_pmic";
		};

		nfc2@28 {
			status = "disabled";
		};

		huawei,lm3646@67 {
			huawei,need-wakelock = <0>;
			huawei,flash-pin = <36 999 999>;
			status = "ok";
		};

		huawei,mp3336@27 {
			huawei,need-wakelock = <0>;
			huawei,flash-pin = <36 999 999>;
			status = "ok";
		};

		tps65132@3e {
			status = "ok";
			reg = <0x3e>;
		};

		lv52134a@42 {
			status = "ok";
			reg = <0x42>;
		};

		rt4801h@73 {
			status = "ok";
			reg = <0x73>;
		};
	};

	i2c@FFD6A000 {
		status = "ok";
		clock-rate = <0 33600000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio199_pmx_func &gpio198_pmx_func &gpio199_cfg_func &gpio198_cfg_func>;
		pinctrl-1 = <&gpio199_pmx_idle &gpio198_pmx_idle &gpio199_cfg_idle &gpio198_cfg_idle>;
		cs-gpios = <&gpio24 7 0>, <&gpio24 6 0>;

		bq25892_charger_i2c6@6B {
			status = "ok";
			fcp_support = <0>;
			scp_support = <0>;
			vclamp = <150>;
			bat_comp = <30>;
			rilim = <150>;
			gpio_cd = <&gpio16 7 0>;
			gpio_int = <&gpio18 6 0>;
			adc_channel_iin = <6>;
			ico_current_mode = <0>;
		};
	};

	i2c@FDF0B000 {
		status = "ok";
		clock-rate = <0 111000000>;
		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gpio190_pmx_func &gpio191_pmx_func &gpio190_cfg_func &gpio191_cfg_func>;
		pinctrl-1 = <&gpio190_pmx_idle &gpio191_pmx_idle &gpio190_cfg_idle &gpio191_cfg_idle>;
		cs-gpios = <&gpio23 6 0>, <&gpio23 7 0>;
	};
};
/* end amba */
